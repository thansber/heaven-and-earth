define(
/* AntiMazeData */
["../constants"],
function(Constants) {

  var ALL_BY_INDEX = {};
  for (var t in Constants.Types) {
    ALL_BY_INDEX[Constants.Types[t]] = [];
  }
  
  var TypeRules = {};
  TypeRules[Constants.Types.Ocean] = {
    wallShadowColor: "#008EFF", 
    allowsWrapping: false, 
    targetSwitchesMovementRule: false
  };
  TypeRules[Constants.Types.Desert] = {
    wallShadowColor: "#C7835D", 
    allowsWrapping: false, 
    targetSwitchesMovementRule: false
  };
  TypeRules[Constants.Types.Mountain] = {allowsWrapping:true, targetSwitchesMovementRule:false};
  TypeRules[Constants.Types.Sky] = {allowsWrapping:true, targetSwitchesMovementRule:true};
  
  var Puzzle = function(type, name, opt) {
    this.type = type;
    this.name = name;
    $.extend(true, this, TypeRules[type]); // puzzles inherit rules based on their type
    $.extend(true, this, opt);
    
    ALL_BY_INDEX[this.type].push(this);
  };
  
  /* ================= */
  /* ----- OCEAN ----- */
  /* ================= */
  new Puzzle(Constants.Types.Ocean, "Right Turn", {
    width:14, height:9, player:{x:0,y:0}, targets:[{x:13,y:8}],
    vertical: ["101","201","301","401","501","601","701","801","901","a01","b01","c01","d01","c51","d51","c81","d81"],
    horizontal: ["d11","d21","d31","d41","d51","b61","d61","b71","d71","b81"]});
  new Puzzle(Constants.Types.Ocean, "Switchbacks", {
    width:9, height:9, player:{x:1,y:1}, targets:[{x:7,y:7}],
    vertical: ["301","501","701","111","817","221","421","621","726"],
    horizontal: ["117","126","831","641","851","661","781","871"]});
  new Puzzle(Constants.Types.Ocean, "Direct Route", {
    width:14, height:9, player:{x:1,y:1}, targets:[{x:12,y:6}],
    vertical: ["111","221","301","421","526","623","662","701","761","821","841","901","962",
               "a21","a52","a81","b01","b31","b51","c21","c61","c81","d13","d53"],
    horizontal: ["11c","124","441","471","581","626","631","654","663","984","a72","b31","b42","b52","b61"]});
  new Puzzle(Constants.Types.Ocean, "Illusions", {
    width:14, height:9, player:{x:1,y:4}, targets:[{x:13,y:6}],
    vertical: ["043","134","234","334","442","471","543","631","651","671","743","843","931","951",
               "a43","b31","b52","c44","d71","e43"],
    horizontal: ["041","07e","132","34b","561","651","c61","d51"]});
  new Puzzle(Constants.Types.Ocean, "Nest", {
    width:14, height:9, player:{x:0,y:0}, targets:[{x:13,y:8}],
    vertical: ["102","181","203","272","304","363","409","509","609","709","809","909","a09",
               "b03","b54","c02","c63","d01","d72"],
    horizontal: ["021","032","043","054","063","072","081","a44","b33","b53","c22","c62","d11","d71"]});
  new Puzzle(Constants.Types.Ocean, "So Near, Yet Far", {
    width:14, height:9, player:{x:6,y:4}, targets:[{x:7,y:4}],
    vertical: ["105","161","181","211","272","301","342","381","434","501","545","602","641","672","701",
               "722","752","781","812","861","881","902","933","972","a01","a21","a43","a81","b12","b41",
               "b71","c11","c43","c81","d01","d22","d51","d72"],
    horizontal: ["011","021","051","063","081","136","142","171","213","251","283","323","371","541","561",
                 "671","717","741","752","781","835","872","a62","a82","b41","c71","d21","d41","d51","d81"]});
  new Puzzle(Constants.Types.Ocean, "Right and Left", {
    width:14, height:9, player:{x:13,y:4}, targets:[{x:0,y:4}],
    vertical: ["009","105","163","201","254","301","322","351","372","432","461","481","501","522","561",
               "581","603","641","662","701","731","763","805","861","881","905","963","a14","a72","b02",
               "b41","b63","c01","c22","c54","d03","d45","e09"],
    horizontal: ["00e","041","051","071","081","09e","113","122","131","161","241","271","331","361","381",
                 "421","451","471","511","531","563","581","621","651","731","781","853","911","931","961",
                 "981","a21","a71","b11","b41","b61","c22","c31","c52","d11","d41"]});
  new Puzzle(Constants.Types.Ocean, "Square Squiggly", {
    width:15, height:15, player:{x:0,y:0}, targets:[{x:1,y:0}],
    vertical: ["118","1a1","1c3","202","235","291","2b1","2d2","301","321","345","3a1","3c1","3e1","402",
               "431","451","471","493","4d1","501","521","541","561","585","5e1","613","6a3","6e1","702",
               "733","771","793","7d2","805","861","881","8a1","8c1","8e1","902","931","951","971","991",
               "9b1","9d2","a03","a41","a61","a81","aa1","ac3","b04","b51","b71","b91","bb4","c05","c61",
               "c81","ca5","d02","d33","d71","d96","e05","e61","e87"],
    horizontal: ["011","021","032","043","054","064","075","082","091","0a2","0b2","0c1","0d2","0e5","221",
                 "291","2c1","311","331","381","3a3","3b5","3d1","422","441","494","4c3","532","553","562",
                 "582","5d1","643","6e1","722","771","7d1","861","881","8a1","8c1","8e7","931","951","971",
                 "991","9b1","9d6","a41","a61","a81","aa1","ac5","b52","b71","b91","bb4","c61","c81","ca3",
                 "d32","d71","d92","e21","e51","e61","e81"]});
  new Puzzle(Constants.Types.Ocean, "Where To?", {
    width:25, height:15, player:{x:24,y:13}, targets:[{x:24,y:14}],
    vertical: ["101","191","1c3","201","2d2","302","3e1","401","4d2","531","5c3","601","6d2","702","7e1",
               "801","8d2","9a1","9c3","a01","ad2","b02","b61","be1","c01","cd2","dc3","e01","ed2","f02",
               "f41","fe1","g01","gd2","hc3","i01","id2","j02","je1","k01","kd2","lc3","m01","md2","n02",
               "o01","oe1"],
    horizontal: ["012","02p","03p","04f","054","06a","07p","08p","091","0b8","0cp","0d1","0e1","1ao","29n",
                 "2d2","412","55k","6d2","812","9bg","ad2","b6e","c12","ed2","g12","g49","id2","k12","md3",
                 "ne1","o11"]});
  new Puzzle(Constants.Types.Ocean, "I Love U", {
    width:25, height:15, player:{x:0,y:0}, targets:[{x:24,y:14}],
    vertical: ["005","105","162","1b4","204","255","2b4","301","354","3c3","401","434","4b4","571","591",
               "5c3","601","641","691","6b4","704","755","7b4","854","8b4","904","964","9d2","a55","ab4",
               "b04","b51","ba1","bc3","c04","c54","ca5","d04","d55","dd2","e01","e55","eb4","f31","f54",
               "fb4","g01","gc3","h01","hb2","he1","i13","i55","ie1","j61","j81","jc3","k01","k22","k71",
               "kb4","l02","l51","l91","m04","m96","n05","n62","n95","o04","o62","o95","p96"],
    horizontal: ["001","021","051","061","071","081","091","0a1","0b7","0d1","0e1","21b","23k","244","251",
                 "293","2a3","32h","462","481","551","571","5c1","747","753","7a3","861","891","8b2","9c1",
                 "b94","ba1","bb7","bc1","c51","da1","dc1","e13","e51","f43","g51","g61","g71","g81","g91",
                 "ga1","hc4","hd2","i12","i53","ia3","j46","j62","j71","j81","j92","jb1","kd1","ke1","l21",
                 "m51","m71","m81","m91","mb1","md1","mf3","n62","ne2","o11","o51","o81","o91","oa1","oc1",
                 "oe1"]});
  new Puzzle(Constants.Types.Ocean, "Meander", {
    width:21, height:13, player:{x:0,y:0}, targets:[{x:14,y:6}],
    vertical: ["101","131","171","1c1","205","263","2b2","302","342","376","441","482","501","531","5c1",
               "604","672","6b2","702","741","767","801","846","8c1","901","935","9c1","a09","ab2","b02",
               "b49","c01","c55","cc1","d36","dc1","e09","eb2","f02","f42","f76","g01","g41","g91","h32",
               "h81","hc1","i06","i71","ib2","j02","j43","j85","k01","k51","k91","kc1"],
    horizontal: ["011","022","031","041","052","067","071","081","092","0a3","0b2","0c1","233","323","341",
                 "373","3b3","411","453","481","4a3","4c1","541","591","633","723","7b3","811","8a3","8c1",
                 "991","a33","b23","b41","bb3","c11","ca3","cc1","d91","e33","f23","f41","f63","f76","fb3",
                 "g11","g51","g81","ga3","gc1","h91","i33","j22","j42","j82","jb2","k11","k51","k61","k91",
                 "ka1","kc1"]});
  new Puzzle(Constants.Types.Ocean, "City", {
    width:21, height:13, player:{x:10,y:6}, targets:[{x:9,y:6}],
    vertical: ["101","131","161","192","221","253","2c1","303","353","3a2","401","422","461","491","4c1",
               "503","541","581","5a1","5c1","602","631","661","692","6c1","721","753","7b1","802","853",
               "8c1","901","921","961","994","a21","a41","a81","aa3","b01","b31","b61","b91","bc1","c21",
               "c53","ca1","d53","da1","dc1","e22","e61","e91","eb1","f01","f21","f41","f81","fa1","fc1",
               "g02","g31","g61","g92","gc1","h01","h21","h53","ha1","hc1","i11","i53","ib1","j01","j22",
               "j61","jc1","k01","k41","k83","kc1"],
    horizontal: ["013","022","033","055","061","071","084","095","0a1","0b2","0c4","143","261","271","322",
                 "3b3","431","462","472","584","5a1","612","632","643","654","693","6c2","761","7a1","7b2",
                 "824","913","931","962","972","a84","aa1","ab2","b43","b54","b93","bc4","c31","c61","c71",
                 "d12","d23","db1","e31","e62","e72","f84","fa1","fb2","g31","g43","g55","g94","h11","h61",
                 "h71","hc2","i23","ib3","j12","j31","j62","j72","ja1","k41","k81","kc1"]});
  
  /* ================== */
  /* ----- DESERT ----- */
  /* ================== */
  new Puzzle(Constants.Types.Desert, "Three Stops", {
    width:25, height:4, player:{x:0,y:3}, targets:[{x:0,y:0}, {x:12,y:0}, {x:24,y:0}],
    vertical: ["004","101","131","201","221","302","401","501","631","711","731","811","911",
               "a11","a31","b11","b31","c11","c31","d04","e03","f21","g11","h11","i11","j13",
               "k31","l13","m01","n31","o31","p04"],
    horizontal: ["00p","04p","131","221","311","511","521","531","711","721","731","911","921","931",
                 "b11","b21","d31","e12","f21","i31","j21","l12","l22","l32","o11","o21","o31"]});
  new Puzzle(Constants.Types.Desert, "Line Up", {
    width:13, height:13, player:{x:7,y:0}, 
    targets:[{x:0,y:6}, {x:1,y:6}, {x:2,y:6}, {x:3,y:6}, {x:4,y:6}, {x:5,y:6}, {x:6,y:6}, {x:7,y:6}, {x:8,y:6}, {x:9,y:6}, {x:10,y:6}, {x:11,y:6}, {x:12,y:6}],
    vertical: ["101","1b2","201","2a3","302","394","403","485","504","576","605","676","706",
               "785","806","894","905","9a3","a04","ab2","b03","bc1","c02","cc1"],
    horizontal: ["012","023","034","045","056","067","075","084","093","0a2","0b1",
                 "677","786","865","895","954","9a4","a43","ab3","b32","bc2","c21"]});
  
  /* ==================== */
  /* ----- MOUNTAIN ----- */
  /* ==================== */
  new Puzzle(Constants.Types.Mountain, "Through and Around", {
    width:20, height:3, player:{x:0,y:1}, 
    targets:[{x:1,y:1}, {x:2,y:1}, {x:3,y:1}, {x:4,y:1}, {x:5,y:1}, {x:6,y:1}, {x:7,y:1}, {x:8,y:1}, {x:9,y:1}, 
             {x:10,y:1}, {x:11,y:1}, {x:12,y:1}, {x:13,y:1}, {x:14,y:1}, {x:15,y:1}, {x:16,y:1}, {x:17,y:1}, {x:18,y:1}, {x:19,y:1}],
    vertical: ["011","111","211","311","411","511","611","711","811","911","b11","c11","d11","e11","f11","g11","h11","i11","j11","k11"],
    horizontal: []});
  
  
  return {
    All : ALL_BY_INDEX,
    lookup : function(type, index) { return ALL_BY_INDEX[type][index]; }
  };
});